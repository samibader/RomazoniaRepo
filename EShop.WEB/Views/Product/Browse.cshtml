@*@model EShop.BLL.DTO.ProductDTO*@
@model EShop.BLL.DTO.ProductDTO
@using EShop.BLL.DTO

@{
    ViewBag.Title = "استعراض المنتج - " + Model.Name;
}@using Resx = EShop.Resources.Views.EShopResource

<!-- Breadcrumbs -->
@*@Html.Partial("_CategoryPathViewModel")*@
<!-- Breadcrumbs End -->
<!-- Main Container -->
<style>
    .selectable {
        cursor: pointer;
    }

    .selectedSize {
        border-color: green !important;
        border-style: dashed;
        border-width: 30px;
    }

    .selectedColor {
        border-color: grey !important;
        border: 2px solid;
    }

    .colorClass {
        border-radius: 50%;
    }

    .ViewCart {
        opacity: 1 !important;
        transform: scaleY(1) !important;
    }

    .colorLabel {
        cursor: pointer;
        height: 20px;
        width: 20px;
        /*border-radius: 10%;*/
        /*border: 1px;*/
    }
    #sizeAttributes table tr td {
        padding: 8px 10px;
        text-align: center;
        border: 2px solid #e7e7e7;
    }
        #sizeAttributes table tr td:hover {
            background: #ff7474;
            color: #fff;
        }
    #sizeAttributes table tr th {
        padding: 8px 6px;
        text-align: center;
        border: 2px solid #e7e7e7;
        font-weight: bold;
    }

     .sizeColor {
    }
</style>

@{Html.RenderAction("ProductCategoryPath", "CategoryBase", new { skuId = @Model.SKUId });}
<div class="main-container col1-layout">
    <div class="container">
        <div class="row">
            <div class="col-main">
                <div class="product-view-area">
                    <div class="product-big-image col-xs-12 col-sm-5 col-lg-5 col-md-5">
                        @if (@Model.IsDiscounted)
                        {
                            
                            <div class="icon-sale-label sale-left">تخفيض</div>
                        }

                        @if (@Model.IsNew)
                        {
                            <div class="icon-new-label new-left">@Resx.New</div>
                        }
                        <div class="large-image">
                            
                            <a href="" class="cloud-zoom" id="zoom1" rel="useWrapper: false, adjustY:0, adjustX:20"> <img class="zoom-img" src="@Model.Images[0]" alt="@Model.Name"> </a>
                        </div>
                        <div class="flexslider flexslider-thumb">

                            <div class="flex-viewport" style="overflow: hidden; position: relative;">
                                <ul class="previews-list slides" style="width: 1000%; transition-duration: 0s; transform: translate3d(0px, 0px, 0px);">
                                    @foreach (var image in @Model.Images)
                                    {
                                        
                                        <li style="width: 100px; float: left; display: block;"><a href="@(image)" class="cloud-zoom-gallery" rel="useZoom: 'zoom1', smallImage: '@(image)' "><img src="@(image)" alt="Thumbnail" draggable="false"></a></li>
                                    }
                                </ul>
                            </div><ul class="flex-direction-nav">
                                <li><a class="flex-prev flex-disabled" href="#" tabindex="-1"></a></li>
                                <li><a class="flex-next" href="#"></a></li>
                            </ul>
                        </div>
                    </div>

                    <!-- end: more-images -->


                    <div class="col-xs-12 col-sm-7 col-lg-7 col-md-7 product-details-area">
                        <div class="product-name">
                            <h1>@Model.Name</h1>
                        </div>
                        <div class="price-box">
                            @if (Model.IsDiscounted)
                            {
                                <p class="old-price"> <span class="price-label">السعر الأصلي:</span> <span class="price"> @Model.OrginalPriceDisplay </span> </p>
                                <p class="special-price"> <span class="price-label">السعر المخصص</span> <span class="price"> @Model.TotalPriceDisplay </span> </p>
                            }
                            else
                            {
                                <p class="special-price"> <span class="price-label">السعر المخصص</span> <span class="price"> @Model.OrginalPriceDisplay </span> </p>

                            }
                        </div>
                        <div style="padding-right: 10px; display: flex; border-bottom: 1px solid #e5e5e5;">
                            @{
                                String availability = @Model.IsAvailable ? "in-stock" : "out-of-stock";
                                String Name = @Model.IsAvailable ? "متوفر" : "غير متوفر";
                            }
                            <p class="availability @availability pull-right"><span>@Name</span> 
                            @if (Model.IsAvailable)
                            {
                                <text>عدد القطع المتبقية <span class="badge">@Model.Quantity</span></text>
                            }
                            </p>
                        </div>
                        <div class="ratings">
                            <div class="rating">
                                @{ Html.RenderPartial("_Stars", Model.TotalRate);}
                            </div>

                            <p class="rating-links">
                                <a href="#">@Model.rates.Count التقييمات</a> <span class="separator">|</span> <a href="#reviews" id="aa">أضف تقييما</a>
                            </p>


                        </div>
                        <div class="short-description">
                            <h2>نظرة سريعة</h2>
                            <p>@Model.MetaDescriptions</p>

                        </div>
                        <div class="short-description" style="border-bottom: 1px solid #e5e5e5;">
                            <h2> المصمم</h2>
                            <p><a href="@Url.Action("Browse","Designer",new{designerName=Model.Designer.DesignerName})">@Model.Designer.DesignerName</a></p>

                        </div>
                        @if (@Model.SelectedColor == @Model.SelectedSize && @Model.SelectedSize == -1)
                        {
                            <br>
                            <br>
                            <br>
                            <br>
                        }
                        else
                        {
                            <div class="product-color-size-area">
                                <h2 class="saider-bar-title">المواصفات</h2>
                                @using (@Html.BeginForm("Browse", "Product", FormMethod.Get, new { @id = "filterForm" }))
                                {

                                  
                                    if (@Model.SelectedColor != -1)
                                    {

                                        <div class="color-area" style="float: @(Model.SelectedSize == -1 ? "right" : "left")">
                                            <h2 class="saider-bar-title">@Resx.Color</h2>
                                            <div class="color">
                                                <ul>
                                                    @{ int colorIdx = 0;}
                                                    @foreach (ColorValuesDTO color in @Model.Colors)
                                                    {
                                                        var background = "";
                                                        if (color.IsImages)
                                                        {
                                                            background = "background:url(" + color.Image + ");background-size:contain;";
                                                        }
                                                        else
                                                        {
                                                            background = "background-color:"+ color.Image;
                                                        }
                                                        @*<li><a href="@Url.Action("Browse", "Product", new {id = @Model.Id, c = @color.ColorName})" style="background-color: @color.Image" class="colorClass @(Model.SelectedColorValue == color.ValueId ? "selectedColor" : "")"></a></li>*@
                                                        <li>
                                                            <input type="radio" id="@color.ColorName" name="c" value="@color.ColorNameEnglish" @(colorIdx == @Model.SelectedColor ? "checked" : "") style="display: none;" class="sizeColor">
                                                            <label for="@color.ColorName" style="@background" class="colorLabel  @(colorIdx++==@Model.SelectedColor ? "selectedColor" : "")"></label>

                                                        </li>
                                                    }
                                                </ul>
                                            </div>

                                        </div>
                                    }
                                    if (@Model.SelectedSize != -1)
                                    {

                                        <div class="size-area">
                                            <h2 class="saider-bar-title">@Resx.Size</h2>
                                            <div class="size">
                                                <ul>
                                                    @{
                                        int sizeIdx = 0;
                                                    }
                                                    @foreach (SizeValueDTO size in @Model.Sizes)
                                                    {
                                                        @*<li class="@(size.Available ? "not" : "") selectable"><a class="@(size.Available ? "not" : "") @(size.OptionValueId ==@Model.SelectedSizeValue ? "selectedSize" : "") ">@size.Name</a></li>*@
                                                        <li>
                                                            @if (size.Available)
                                                            {
                                                                <input type="radio" id="@size.Name" name="s" value="@size.EnglishName" style="display: none;" @(sizeIdx == @Model.SelectedSize ? "checked" : "") class="sizeColor">
                                                            }
                                                            <label for="@size.Name" class="@(sizeIdx++== @Model.SelectedSize ? "selectedSize" : "") @(!size.Available?"line":"")">@size.Name</label>
                                                        </li>
                                                    }
                                                    @*<li><a href="#">كبير</a></li>
                                                        <li><a href="#">وسط</a></li>
                                                        <li><a href="#">كبير جدا</a></li>
                                                        <li><a href="#">كبير جدا جدا</a></li>*@
                                                </ul>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>

                        }
                        @if (Model.SizeAttributes.Count > 0) { 
                        <div id="sizeAttributes">
                            <table style="margin-bottom: 2px;">
                                
                                <tr>
                                    <th rowspan="2" style="vertical-align: middle">القياس</th>
                                    @foreach (var sizeAttribute in Model.SizeAttributes)
                                    {
                                        <th colspan="2">@sizeAttribute.SizeAttributeName</th>
                                    }
                                </tr>
                                <tr>
                                    @foreach (var sizeAttribute in Model.SizeAttributes)
                                    {
                                        <td>cm</td>
                                        <td>Inch</td>
                                    }
                                </tr>
                                <tr>
                                    <td>@Model.Sizes[@Model.SelectedSize].Name</td>
                                    @foreach (var sizeAttribute in Model.SizeAttributes)
                                    {
                                        <td>@sizeAttribute.SizeAttributeValueCm</td>
                                        <td>@sizeAttribute.SizeAttributeValueInch</td>
                                    }
                                   
                                </tr>
                            </table>

                        </div>
                        }
                        <div class="product-variation">
                            @using (@Html.BeginForm("Add", "Cart", FormMethod.Post, new { @id = "AddToCartForm" }))
                            {
                                <input type="Hidden" id="skuId" name="SKUId" value="@Model.SKUId" />
                                <input type="Hidden" id="productId" name="ProductId" value="@Model.Id" />
                                <div class="cart-plus-minus">
                                    <label for="qty">الكمية:</label>
                                    <div class="numbers-row">
                                        <div onclick="var result = document.getElementById('qty'); var qty = result.value; if( !isNaN( qty ) &amp;&amp; qty &gt; 0 ) result.value--;return false;" class="dec qtybutton"><i class="fa fa-minus">&nbsp;</i></div>
                                        <input type="text" class="qty" title="Qty" value="1" id="qty" name="Quantity">
                                        <div onclick="var result = document.getElementById('qty'); var qty = result.value; if( !isNaN( qty )) result.value++;return false;" class="inc qtybutton"><i class="fa fa-plus">&nbsp;</i></div>
                                    </div>
                                </div>
                                <button class="button pro-add-to-cart" title="Add to Cart" type="submit" onclick=" return chk()"><span><i class="fa fa-shopping-cart"></i> أضف إلى سلة الشراء</span></button>
                            }
                        </div>
                        <div class="short-description" style="border-bottom: 1px solid #e5e5e5;">
                            <h2>وسوم المنتج</h2>
                            <p>
                                @foreach (var tag in Model.Tags)
                                {
                                    <a href="@Url.Action("Browse", "Tag", new {tagName = tag.Name})">@tag.Name</a>
                                }
                            </p>

                        </div>
                        <div class="product-cart-option">
                            <ul>
                                <li><a href="#" onclick="addToFav(@Model.Id)"><i class="fa fa-heart"></i><span>أضف إلى المفضلة</span></a></li>
                                @*<li><a href="#"><i class="fa fa-retweet"></i><span>أجري مقارنة</span></a></li>*@
                                <li><a href="#"><i class="fa fa-envelope"></i><span>أرسل لصديق عبر الأيميل</span></a></li>
                            </ul>
                        </div>
                    </div>
                </div>

            </div>
            <div class="product-overview-tab">
                <div class="container">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="product-tab-inner">
                                <ul id="product-detail-tab" class="nav nav-tabs product-tabs">
                                    <li class="active"> <a href="#description" data-toggle="tab"> التوصيف </a> </li>
                                    <li> <a href="#reviews" data-toggle="tab">التقييمات</a> </li>
                                    <li><a href="#product_tags" data-toggle="tab">الوسوم</a></li>
                                </ul>
                                <div id="productTabContent" class="tab-content">
                                    <div class="tab-pane fade in active" id="description">
                                        <div class="std">
                                            @Html.Raw(Model.Text)
                                        </div>
                                    </div>
                                    <div id="reviews" class="tab-pane fade">
                                        <div id="review-list">
                                            @{
                                                Html.RenderPartial("../Rate/_ProductRates", @Model.rates);
                                            }
                                        </div>
                                        <div class="col-sm-7 col-lg-7 col-md-7" id="add-review">

                                            @{ Html.RenderAction("AddRate", "Rate", new { id = @Model.Id }); }
                                        </div>
                                    </div>
                                    <div class="tab-pane fade" id="product_tags">
                                        <div class="box-collateral box-tags">
                                            <div class="tags">
                                                <form id="addTagForm" action="#" method="get">
                                                    <div class="form-add-tags">
                                                        <div class="input-box">
                                                            <label for="productTagName">أضف وسماً:</label>
                                                            <input class="input-text" name="productTagName" id="productTagName" type="text">
                                                            <button type="button" title="Add Tags" class="button add-tags"><i class="fa fa-plus"></i> &nbsp;<span>أضف وسوماً</span> </button>
                                                        </div>
                                                        <!--input-box-->
                                                    </div>
                                                </form>
                                            </div>
                                            <!--tags-->
                                            <p class="note">استخدم فراغات للفصل بين الوسوم. استخدم علامة تنصيص مفردة للفصل بين العبارات.</p>
                                        </div>
                                    </div>
                                    <div class="tab-pane fade" id="custom_tabs">
                                        <div class="product-tabs-content-inner clearfix">
                                            <p>
                                                <strong>قميص رجالي</strong><span>
                                                    &nbsp;is
                                                    simply dummy text of the printing and typesetting industry. Lorem Ipsum
                                                    has been the industry's standard dummy text ever since the 1500s, when
                                                    an unknown printer took a galley of type and scrambled it to make a type
                                                    specimen book. It has survived not only five centuries, but also the
                                                    leap into electronic typesetting, remaining essentially unchanged. It
                                                    was popularised in the 1960s with the release of Letraset sheets
                                                    containing Lorem Ipsum passages, and more recently with desktop
                                                    publishing software like Aldus PageMaker including versions of Lorem
                                                    Ipsum.
                                                </span>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Main Container End -->
<!-- Related Product Slider -->

<div class="container">
    <div class="row">
        <div class="col-xs-12">
            @*<div class="related-product-area">
                <div class="page-header">
                    <h2>منتجات مشابهة</h2>
                </div>*@
            @{Html.RenderAction("GetRelatedProducts", "Product", new { id = @Model.Id });}
        </div>
    </div>
</div>
<!-- Related Product Slider End -->
<!-- Upsell Product Slider -->
<section class="upsell-product-area">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                @*<div class="page-header">
                        <h2>المنتجات الأكثر مبيعاً</h2>
                    </div>*@
                @{Html.RenderAction("GetTopProducts", "Product", new { id = @Model.Id, main = false });}
            </div>
        </div>
    </div>
</section>
<!-- Upsell Product Slider End -->

<script type="text/javascript">
    function selectSize(skuId) {
        var x = document.getElementById("skuId");
        x.value = skuId;
        var xx = document.getElementById(skuId);
        $(".selectedSize").removeClass("selectedSize");
        $('#'+skuId.toString()).addClass("selectedSize");
    }

    function chk() {
        var x = document.getElementById("skuId");

        if (x.value =="") {
            alert("Select A size");
            return false;}

        return true;
    }

</script>

<script type="text/javascript">


    $(function () {

        $('#AddToCartForm').on('submit', function (e) {

            e.preventDefault();

            $.ajax({
                type: 'post',
                dataType: 'json',
                url: '@Url.Action("Add","Cart")',
                data: $('#AddToCartForm').serialize(),
                success: function(data) {
                    $('#CartSummary')
                        .load('@Url.Action("CartSummary", "Cart")',function() {
                            var type = (data.Success) ? 'success' : 'error';
                            generateFlash(type, data.Msg);
                            if(data.Success){
                                jQuery('body,html').animate({
                                    scrollTop: 0,
                                }, 700);

                                $('#topCart').addClass("showw");
                                setTimeout(function() { $("#topCart").removeClass("showw")},2500);
                                $("#topCart").hover(
                                    function() { $("#topCart").removeClass("showw"); });}
                        });




                    //$("#topCart").hover(function() { this.removeClass("showw"); });
                    // var s= document.getElementById("topCart").attributes.getNamedItem('style');
                    //document.getElementById("topCart").


                    //$("#topCart").css(new {transform:"scaleY(1) !important"});
                    //$("#topCart").addClass("ViewCart");


                }
            });

        });

    });
    $(function() {
        $('.sizeColor').change(function() {
            $('#filterForm').submit();
        });
    });
</script>
<script>

    $(document).on('ready',function() {
        $("#add-review").on('click',"#fuck-rate",
            function(e) {

                $.ajax({
                    type: 'post',
                    url: '@Url.Action("AddRate", "Rate")',
                    data: $("#add-rate").serialize(),
                    success: function(data) {
                        if (data.Succedeed) {
                            generateFlash('success', 'شكرا على تقييمك لهذا المنتج');
                            $("#add-review").load('@Url.Action("AddRate", "Rate", new {id = Model.Id})');
                            $("#review-list").load('@Url.Action("ProductRates", "Rate", new {id = Model.Id})');
                            $(".rating").load('@Url.Action("GetRate", "Rate", new {id = Model.Id})');

                        } else {
                            generateFlash('error', 'حدث خطأ أثناء اضافة التقييم ');
                        }
                    }
                });
            });
    });

</script>
<script>
    function selectColor(productId, valueId) {

        var prod = document.getElementById("prod-"+productId);
        var className = "product-item-photo";

        $("#"+productId+" .btn-quickview")
               .each(function() {
                   if (!$(this).hasClass('Hidden'))
                       $(this).addClass('Hidden');
               });
        $('#q-d-' + productId + '-' + valueId).removeClass('Hidden');
        var elems = prod.getElementsByClassName(className);
        for (var i = 0; i < elems.length; i++) {
            elems[i].className += elems[i].className ? ' Hidden' : 'Hidden';
        }
        //var colorElems = prod.getElementsByClassName("selectedColor");
        //for (var ii = 0; ii < colorElems.length; ii++) {
        //    colorElems[ii].className = "";
        //    colorElems[ii].className = "colorClass";
        //}
        // el.className += el.className == "" ? 'selectedColor' : ' selectedColor';
        $("#prod-" + productId.toString() + " .selectedColor").removeClass("selectedColor");
        $('#' + productId.toString() + "--" + valueId.toString()).addClass("selectedColor");

        // alert(elems);
        document.getElementById(productId.toString() + '-' + valueId.toString()).className = "";
        document.getElementById(productId.toString() + '-' + valueId.toString()).className = className;
        return false;
    }
</script>
<div id="quick"></div>